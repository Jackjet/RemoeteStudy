//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34014
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.34014 版自动生成。
// 
#pragma warning disable 1591

namespace UserCenterSystem.ADWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ADWebServiceSoap", Namespace="http://ADManager.org/")]
    public partial class ADWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateParentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTeacherOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTeacherTESTOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateStudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUser2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserByCNOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserByIDCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserByIDCard2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserBysAMAccountNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserTypeBysAMAccountNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUserValidOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsEnableUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetUserPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ManagerResetPassWordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDirectoryEntryOfGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback RenameOUOperationCompleted;
        
        private System.Threading.SendOrPostCallback MoveOUOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ADWebService() {
            this.Url = global::UserCenterSystem.Properties.Settings.Default.UserCenterSystem_ADWS_ADWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateParentsCompletedEventHandler CreateParentsCompleted;
        
        /// <remarks/>
        public event CreateTeacherCompletedEventHandler CreateTeacherCompleted;
        
        /// <remarks/>
        public event CreateTeacherTESTCompletedEventHandler CreateTeacherTESTCompleted;
        
        /// <remarks/>
        public event CreateStudentCompletedEventHandler CreateStudentCompleted;
        
        /// <remarks/>
        public event DeleteUserCompletedEventHandler DeleteUserCompleted;
        
        /// <remarks/>
        public event DeleteUser2CompletedEventHandler DeleteUser2Completed;
        
        /// <remarks/>
        public event GetUserByCNCompletedEventHandler GetUserByCNCompleted;
        
        /// <remarks/>
        public event GetUserByIDCardCompletedEventHandler GetUserByIDCardCompleted;
        
        /// <remarks/>
        public event GetUserByIDCard2CompletedEventHandler GetUserByIDCard2Completed;
        
        /// <remarks/>
        public event GetUserBysAMAccountNameCompletedEventHandler GetUserBysAMAccountNameCompleted;
        
        /// <remarks/>
        public event GetUserTypeBysAMAccountNameCompletedEventHandler GetUserTypeBysAMAccountNameCompleted;
        
        /// <remarks/>
        public event IsUserValidCompletedEventHandler IsUserValidCompleted;
        
        /// <remarks/>
        public event IsEnableUserCompletedEventHandler IsEnableUserCompleted;
        
        /// <remarks/>
        public event SetUserPasswordCompletedEventHandler SetUserPasswordCompleted;
        
        /// <remarks/>
        public event ManagerResetPassWordCompletedEventHandler ManagerResetPassWordCompleted;
        
        /// <remarks/>
        public event GetDirectoryEntryOfGroupCompletedEventHandler GetDirectoryEntryOfGroupCompleted;
        
        /// <remarks/>
        public event RenameOUCompletedEventHandler RenameOUCompleted;
        
        /// <remarks/>
        public event MoveOUCompletedEventHandler MoveOUCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ADManager.org/CreateParents", RequestNamespace="http://ADManager.org/", ResponseNamespace="http://ADManager.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateParents(string sAMAccountName, string displayName, string Password, string IDCard, string OUType) {
            object[] results = this.Invoke("CreateParents", new object[] {
                        sAMAccountName,
                        displayName,
                        Password,
                        IDCard,
                        OUType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateParentsAsync(string sAMAccountName, string displayName, string Password, string IDCard, string OUType) {
            this.CreateParentsAsync(sAMAccountName, displayName, Password, IDCard, OUType, null);
        }
        
        /// <remarks/>
        public void CreateParentsAsync(string sAMAccountName, string displayName, string Password, string IDCard, string OUType, object userState) {
            if ((this.CreateParentsOperationCompleted == null)) {
                this.CreateParentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateParentsOperationCompleted);
            }
            this.InvokeAsync("CreateParents", new object[] {
                        sAMAccountName,
                        displayName,
                        Password,
                        IDCard,
                        OUType}, this.CreateParentsOperationCompleted, userState);
        }
        
        private void OnCreateParentsOperationCompleted(object arg) {
            if ((this.CreateParentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateParentsCompleted(this, new CreateParentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ADManager.org/CreateTeacher", RequestNamespace="http://ADManager.org/", ResponseNamespace="http://ADManager.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateTeacher(string sAMAccountName, string displayName, string Password, string IDCard, string OUType) {
            object[] results = this.Invoke("CreateTeacher", new object[] {
                        sAMAccountName,
                        displayName,
                        Password,
                        IDCard,
                        OUType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTeacherAsync(string sAMAccountName, string displayName, string Password, string IDCard, string OUType) {
            this.CreateTeacherAsync(sAMAccountName, displayName, Password, IDCard, OUType, null);
        }
        
        /// <remarks/>
        public void CreateTeacherAsync(string sAMAccountName, string displayName, string Password, string IDCard, string OUType, object userState) {
            if ((this.CreateTeacherOperationCompleted == null)) {
                this.CreateTeacherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTeacherOperationCompleted);
            }
            this.InvokeAsync("CreateTeacher", new object[] {
                        sAMAccountName,
                        displayName,
                        Password,
                        IDCard,
                        OUType}, this.CreateTeacherOperationCompleted, userState);
        }
        
        private void OnCreateTeacherOperationCompleted(object arg) {
            if ((this.CreateTeacherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTeacherCompleted(this, new CreateTeacherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ADManager.org/CreateTeacherTEST", RequestNamespace="http://ADManager.org/", ResponseNamespace="http://ADManager.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateTeacherTEST(string sAMAccountName, string displayName, string Password, string IDCard, string OUType) {
            object[] results = this.Invoke("CreateTeacherTEST", new object[] {
                        sAMAccountName,
                        displayName,
                        Password,
                        IDCard,
                        OUType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTeacherTESTAsync(string sAMAccountName, string displayName, string Password, string IDCard, string OUType) {
            this.CreateTeacherTESTAsync(sAMAccountName, displayName, Password, IDCard, OUType, null);
        }
        
        /// <remarks/>
        public void CreateTeacherTESTAsync(string sAMAccountName, string displayName, string Password, string IDCard, string OUType, object userState) {
            if ((this.CreateTeacherTESTOperationCompleted == null)) {
                this.CreateTeacherTESTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTeacherTESTOperationCompleted);
            }
            this.InvokeAsync("CreateTeacherTEST", new object[] {
                        sAMAccountName,
                        displayName,
                        Password,
                        IDCard,
                        OUType}, this.CreateTeacherTESTOperationCompleted, userState);
        }
        
        private void OnCreateTeacherTESTOperationCompleted(object arg) {
            if ((this.CreateTeacherTESTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTeacherTESTCompleted(this, new CreateTeacherTESTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ADManager.org/CreateStudent", RequestNamespace="http://ADManager.org/", ResponseNamespace="http://ADManager.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateStudent(string sAMAccountName, string displayName, string Password, string IDCard, string OUType) {
            object[] results = this.Invoke("CreateStudent", new object[] {
                        sAMAccountName,
                        displayName,
                        Password,
                        IDCard,
                        OUType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateStudentAsync(string sAMAccountName, string displayName, string Password, string IDCard, string OUType) {
            this.CreateStudentAsync(sAMAccountName, displayName, Password, IDCard, OUType, null);
        }
        
        /// <remarks/>
        public void CreateStudentAsync(string sAMAccountName, string displayName, string Password, string IDCard, string OUType, object userState) {
            if ((this.CreateStudentOperationCompleted == null)) {
                this.CreateStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateStudentOperationCompleted);
            }
            this.InvokeAsync("CreateStudent", new object[] {
                        sAMAccountName,
                        displayName,
                        Password,
                        IDCard,
                        OUType}, this.CreateStudentOperationCompleted, userState);
        }
        
        private void OnCreateStudentOperationCompleted(object arg) {
            if ((this.CreateStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateStudentCompleted(this, new CreateStudentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ADManager.org/DeleteUser", RequestNamespace="http://ADManager.org/", ResponseNamespace="http://ADManager.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteUser(string sUserName) {
            object[] results = this.Invoke("DeleteUser", new object[] {
                        sUserName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUserAsync(string sUserName) {
            this.DeleteUserAsync(sUserName, null);
        }
        
        /// <remarks/>
        public void DeleteUserAsync(string sUserName, object userState) {
            if ((this.DeleteUserOperationCompleted == null)) {
                this.DeleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserOperationCompleted);
            }
            this.InvokeAsync("DeleteUser", new object[] {
                        sUserName}, this.DeleteUserOperationCompleted, userState);
        }
        
        private void OnDeleteUserOperationCompleted(object arg) {
            if ((this.DeleteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserCompleted(this, new DeleteUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ADManager.org/DeleteUser2", RequestNamespace="http://ADManager.org/", ResponseNamespace="http://ADManager.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteUser2(string sUserName) {
            object[] results = this.Invoke("DeleteUser2", new object[] {
                        sUserName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUser2Async(string sUserName) {
            this.DeleteUser2Async(sUserName, null);
        }
        
        /// <remarks/>
        public void DeleteUser2Async(string sUserName, object userState) {
            if ((this.DeleteUser2OperationCompleted == null)) {
                this.DeleteUser2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUser2OperationCompleted);
            }
            this.InvokeAsync("DeleteUser2", new object[] {
                        sUserName}, this.DeleteUser2OperationCompleted, userState);
        }
        
        private void OnDeleteUser2OperationCompleted(object arg) {
            if ((this.DeleteUser2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUser2Completed(this, new DeleteUser2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ADManager.org/GetUserByCN", RequestNamespace="http://ADManager.org/", ResponseNamespace="http://ADManager.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetUserByCN(string displayName) {
            object[] results = this.Invoke("GetUserByCN", new object[] {
                        displayName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserByCNAsync(string displayName) {
            this.GetUserByCNAsync(displayName, null);
        }
        
        /// <remarks/>
        public void GetUserByCNAsync(string displayName, object userState) {
            if ((this.GetUserByCNOperationCompleted == null)) {
                this.GetUserByCNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserByCNOperationCompleted);
            }
            this.InvokeAsync("GetUserByCN", new object[] {
                        displayName}, this.GetUserByCNOperationCompleted, userState);
        }
        
        private void OnGetUserByCNOperationCompleted(object arg) {
            if ((this.GetUserByCNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserByCNCompleted(this, new GetUserByCNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ADManager.org/GetUserByIDCard", RequestNamespace="http://ADManager.org/", ResponseNamespace="http://ADManager.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetUserByIDCard(string IDCard) {
            object[] results = this.Invoke("GetUserByIDCard", new object[] {
                        IDCard});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserByIDCardAsync(string IDCard) {
            this.GetUserByIDCardAsync(IDCard, null);
        }
        
        /// <remarks/>
        public void GetUserByIDCardAsync(string IDCard, object userState) {
            if ((this.GetUserByIDCardOperationCompleted == null)) {
                this.GetUserByIDCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserByIDCardOperationCompleted);
            }
            this.InvokeAsync("GetUserByIDCard", new object[] {
                        IDCard}, this.GetUserByIDCardOperationCompleted, userState);
        }
        
        private void OnGetUserByIDCardOperationCompleted(object arg) {
            if ((this.GetUserByIDCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserByIDCardCompleted(this, new GetUserByIDCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ADManager.org/GetUserByIDCard2", RequestNamespace="http://ADManager.org/", ResponseNamespace="http://ADManager.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserByIDCard2(string IDCard) {
            object[] results = this.Invoke("GetUserByIDCard2", new object[] {
                        IDCard});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserByIDCard2Async(string IDCard) {
            this.GetUserByIDCard2Async(IDCard, null);
        }
        
        /// <remarks/>
        public void GetUserByIDCard2Async(string IDCard, object userState) {
            if ((this.GetUserByIDCard2OperationCompleted == null)) {
                this.GetUserByIDCard2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserByIDCard2OperationCompleted);
            }
            this.InvokeAsync("GetUserByIDCard2", new object[] {
                        IDCard}, this.GetUserByIDCard2OperationCompleted, userState);
        }
        
        private void OnGetUserByIDCard2OperationCompleted(object arg) {
            if ((this.GetUserByIDCard2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserByIDCard2Completed(this, new GetUserByIDCard2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ADManager.org/GetUserBysAMAccountName", RequestNamespace="http://ADManager.org/", ResponseNamespace="http://ADManager.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetUserBysAMAccountName(string sAMAccountName) {
            object[] results = this.Invoke("GetUserBysAMAccountName", new object[] {
                        sAMAccountName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserBysAMAccountNameAsync(string sAMAccountName) {
            this.GetUserBysAMAccountNameAsync(sAMAccountName, null);
        }
        
        /// <remarks/>
        public void GetUserBysAMAccountNameAsync(string sAMAccountName, object userState) {
            if ((this.GetUserBysAMAccountNameOperationCompleted == null)) {
                this.GetUserBysAMAccountNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserBysAMAccountNameOperationCompleted);
            }
            this.InvokeAsync("GetUserBysAMAccountName", new object[] {
                        sAMAccountName}, this.GetUserBysAMAccountNameOperationCompleted, userState);
        }
        
        private void OnGetUserBysAMAccountNameOperationCompleted(object arg) {
            if ((this.GetUserBysAMAccountNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserBysAMAccountNameCompleted(this, new GetUserBysAMAccountNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ADManager.org/GetUserTypeBysAMAccountName", RequestNamespace="http://ADManager.org/", ResponseNamespace="http://ADManager.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserTypeBysAMAccountName(string sAMAccountName, string SchoolName) {
            object[] results = this.Invoke("GetUserTypeBysAMAccountName", new object[] {
                        sAMAccountName,
                        SchoolName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserTypeBysAMAccountNameAsync(string sAMAccountName, string SchoolName) {
            this.GetUserTypeBysAMAccountNameAsync(sAMAccountName, SchoolName, null);
        }
        
        /// <remarks/>
        public void GetUserTypeBysAMAccountNameAsync(string sAMAccountName, string SchoolName, object userState) {
            if ((this.GetUserTypeBysAMAccountNameOperationCompleted == null)) {
                this.GetUserTypeBysAMAccountNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserTypeBysAMAccountNameOperationCompleted);
            }
            this.InvokeAsync("GetUserTypeBysAMAccountName", new object[] {
                        sAMAccountName,
                        SchoolName}, this.GetUserTypeBysAMAccountNameOperationCompleted, userState);
        }
        
        private void OnGetUserTypeBysAMAccountNameOperationCompleted(object arg) {
            if ((this.GetUserTypeBysAMAccountNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserTypeBysAMAccountNameCompleted(this, new GetUserTypeBysAMAccountNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ADManager.org/IsUserValid", RequestNamespace="http://ADManager.org/", ResponseNamespace="http://ADManager.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsUserValid(string sAMAccountName, string Password) {
            object[] results = this.Invoke("IsUserValid", new object[] {
                        sAMAccountName,
                        Password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUserValidAsync(string sAMAccountName, string Password) {
            this.IsUserValidAsync(sAMAccountName, Password, null);
        }
        
        /// <remarks/>
        public void IsUserValidAsync(string sAMAccountName, string Password, object userState) {
            if ((this.IsUserValidOperationCompleted == null)) {
                this.IsUserValidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUserValidOperationCompleted);
            }
            this.InvokeAsync("IsUserValid", new object[] {
                        sAMAccountName,
                        Password}, this.IsUserValidOperationCompleted, userState);
        }
        
        private void OnIsUserValidOperationCompleted(object arg) {
            if ((this.IsUserValidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUserValidCompleted(this, new IsUserValidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ADManager.org/IsEnableUser", RequestNamespace="http://ADManager.org/", ResponseNamespace="http://ADManager.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string IsEnableUser(string sAMAccountName, bool IsEnable) {
            object[] results = this.Invoke("IsEnableUser", new object[] {
                        sAMAccountName,
                        IsEnable});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void IsEnableUserAsync(string sAMAccountName, bool IsEnable) {
            this.IsEnableUserAsync(sAMAccountName, IsEnable, null);
        }
        
        /// <remarks/>
        public void IsEnableUserAsync(string sAMAccountName, bool IsEnable, object userState) {
            if ((this.IsEnableUserOperationCompleted == null)) {
                this.IsEnableUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsEnableUserOperationCompleted);
            }
            this.InvokeAsync("IsEnableUser", new object[] {
                        sAMAccountName,
                        IsEnable}, this.IsEnableUserOperationCompleted, userState);
        }
        
        private void OnIsEnableUserOperationCompleted(object arg) {
            if ((this.IsEnableUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsEnableUserCompleted(this, new IsEnableUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ADManager.org/SetUserPassword", RequestNamespace="http://ADManager.org/", ResponseNamespace="http://ADManager.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetUserPassword(string userName, string oldPwd, string newPwd) {
            object[] results = this.Invoke("SetUserPassword", new object[] {
                        userName,
                        oldPwd,
                        newPwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetUserPasswordAsync(string userName, string oldPwd, string newPwd) {
            this.SetUserPasswordAsync(userName, oldPwd, newPwd, null);
        }
        
        /// <remarks/>
        public void SetUserPasswordAsync(string userName, string oldPwd, string newPwd, object userState) {
            if ((this.SetUserPasswordOperationCompleted == null)) {
                this.SetUserPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetUserPasswordOperationCompleted);
            }
            this.InvokeAsync("SetUserPassword", new object[] {
                        userName,
                        oldPwd,
                        newPwd}, this.SetUserPasswordOperationCompleted, userState);
        }
        
        private void OnSetUserPasswordOperationCompleted(object arg) {
            if ((this.SetUserPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetUserPasswordCompleted(this, new SetUserPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ADManager.org/ManagerResetPassWord", RequestNamespace="http://ADManager.org/", ResponseNamespace="http://ADManager.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ManagerResetPassWord(string UserName) {
            object[] results = this.Invoke("ManagerResetPassWord", new object[] {
                        UserName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ManagerResetPassWordAsync(string UserName) {
            this.ManagerResetPassWordAsync(UserName, null);
        }
        
        /// <remarks/>
        public void ManagerResetPassWordAsync(string UserName, object userState) {
            if ((this.ManagerResetPassWordOperationCompleted == null)) {
                this.ManagerResetPassWordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnManagerResetPassWordOperationCompleted);
            }
            this.InvokeAsync("ManagerResetPassWord", new object[] {
                        UserName}, this.ManagerResetPassWordOperationCompleted, userState);
        }
        
        private void OnManagerResetPassWordOperationCompleted(object arg) {
            if ((this.ManagerResetPassWordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ManagerResetPassWordCompleted(this, new ManagerResetPassWordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ADManager.org/GetDirectoryEntryOfGroup", RequestNamespace="http://ADManager.org/", ResponseNamespace="http://ADManager.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetDirectoryEntryOfGroup(string groupName) {
            object[] results = this.Invoke("GetDirectoryEntryOfGroup", new object[] {
                        groupName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetDirectoryEntryOfGroupAsync(string groupName) {
            this.GetDirectoryEntryOfGroupAsync(groupName, null);
        }
        
        /// <remarks/>
        public void GetDirectoryEntryOfGroupAsync(string groupName, object userState) {
            if ((this.GetDirectoryEntryOfGroupOperationCompleted == null)) {
                this.GetDirectoryEntryOfGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDirectoryEntryOfGroupOperationCompleted);
            }
            this.InvokeAsync("GetDirectoryEntryOfGroup", new object[] {
                        groupName}, this.GetDirectoryEntryOfGroupOperationCompleted, userState);
        }
        
        private void OnGetDirectoryEntryOfGroupOperationCompleted(object arg) {
            if ((this.GetDirectoryEntryOfGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDirectoryEntryOfGroupCompleted(this, new GetDirectoryEntryOfGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ADManager.org/RenameOU", RequestNamespace="http://ADManager.org/", ResponseNamespace="http://ADManager.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RenameOU(string old, string newOUName) {
            object[] results = this.Invoke("RenameOU", new object[] {
                        old,
                        newOUName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RenameOUAsync(string old, string newOUName) {
            this.RenameOUAsync(old, newOUName, null);
        }
        
        /// <remarks/>
        public void RenameOUAsync(string old, string newOUName, object userState) {
            if ((this.RenameOUOperationCompleted == null)) {
                this.RenameOUOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRenameOUOperationCompleted);
            }
            this.InvokeAsync("RenameOU", new object[] {
                        old,
                        newOUName}, this.RenameOUOperationCompleted, userState);
        }
        
        private void OnRenameOUOperationCompleted(object arg) {
            if ((this.RenameOUCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RenameOUCompleted(this, new RenameOUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ADManager.org/MoveOU", RequestNamespace="http://ADManager.org/", ResponseNamespace="http://ADManager.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool MoveOU(string originalSchoolName, string nodeName, string nowSchoolName) {
            object[] results = this.Invoke("MoveOU", new object[] {
                        originalSchoolName,
                        nodeName,
                        nowSchoolName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void MoveOUAsync(string originalSchoolName, string nodeName, string nowSchoolName) {
            this.MoveOUAsync(originalSchoolName, nodeName, nowSchoolName, null);
        }
        
        /// <remarks/>
        public void MoveOUAsync(string originalSchoolName, string nodeName, string nowSchoolName, object userState) {
            if ((this.MoveOUOperationCompleted == null)) {
                this.MoveOUOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoveOUOperationCompleted);
            }
            this.InvokeAsync("MoveOU", new object[] {
                        originalSchoolName,
                        nodeName,
                        nowSchoolName}, this.MoveOUOperationCompleted, userState);
        }
        
        private void OnMoveOUOperationCompleted(object arg) {
            if ((this.MoveOUCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MoveOUCompleted(this, new MoveOUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void CreateParentsCompletedEventHandler(object sender, CreateParentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateParentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateParentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void CreateTeacherCompletedEventHandler(object sender, CreateTeacherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTeacherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTeacherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void CreateTeacherTESTCompletedEventHandler(object sender, CreateTeacherTESTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTeacherTESTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTeacherTESTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void CreateStudentCompletedEventHandler(object sender, CreateStudentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateStudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateStudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeleteUserCompletedEventHandler(object sender, DeleteUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeleteUser2CompletedEventHandler(object sender, DeleteUser2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUser2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUser2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetUserByCNCompletedEventHandler(object sender, GetUserByCNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserByCNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserByCNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetUserByIDCardCompletedEventHandler(object sender, GetUserByIDCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserByIDCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserByIDCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetUserByIDCard2CompletedEventHandler(object sender, GetUserByIDCard2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserByIDCard2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserByIDCard2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetUserBysAMAccountNameCompletedEventHandler(object sender, GetUserBysAMAccountNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserBysAMAccountNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserBysAMAccountNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetUserTypeBysAMAccountNameCompletedEventHandler(object sender, GetUserTypeBysAMAccountNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserTypeBysAMAccountNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserTypeBysAMAccountNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void IsUserValidCompletedEventHandler(object sender, IsUserValidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUserValidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUserValidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void IsEnableUserCompletedEventHandler(object sender, IsEnableUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsEnableUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsEnableUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SetUserPasswordCompletedEventHandler(object sender, SetUserPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetUserPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetUserPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ManagerResetPassWordCompletedEventHandler(object sender, ManagerResetPassWordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ManagerResetPassWordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ManagerResetPassWordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetDirectoryEntryOfGroupCompletedEventHandler(object sender, GetDirectoryEntryOfGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDirectoryEntryOfGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDirectoryEntryOfGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void RenameOUCompletedEventHandler(object sender, RenameOUCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RenameOUCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RenameOUCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void MoveOUCompletedEventHandler(object sender, MoveOUCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MoveOUCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MoveOUCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591